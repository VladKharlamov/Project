@using Microsoft.AspNet.Identity
@using PhotoAlbum.BLL.EnittyBLL
@using PhotoAlbum.WEB.HTMLHelpers
@model PhotoAlbum.WEB.Models.PhotoPageViewModel

@{
    ViewBag.Title = "Photos";
}

@section styles {
    @Styles.Render("~/Content/Css/Style.css")
}
<br/>
<br/>
<div class="text-center">
    <span style="font-size: 14pt"> @User.Identity.Name </span>
    <a href="@Url.Action("Create")" class="btn btn-lg btn-follow">Follow  999</a>
    <a href="@Url.Action("Create")" class="btn btn-lg btn-default">Followed  1000</a>
</div>
<br />
<br />
<div class="row text-center images-list">

    @foreach (var item in Model.UserPhotos)
    {
        <div class="col-xs-12 col-sm-6 col-md-4 col-lg-3 image-item">
            <a class="image-item-wrapper view-photo" href="@Url.Action("ViewPhoto", "Photo", new { Id = item.Id })">

                <img src="@item.PhotoAddress" width="390px"/>
               <div class="image-item-set">@*<span class="glyphicon glyphicon-heart"> @Html.Action("Like", "Like",
    new LikeBLL() { PhotoId = item.Id, UserId = User.Identity.GetUserId() })*@
                    
                    @*@if (@ViewBag.liked)
                    {*@
                    @*}
    else
    {
        <span style="font-size: 30px" class="glyphicon glyphicon-heart"></span>
    }*@


                @*@using (Html.BeginForm()) {*@
                @using (Ajax.BeginForm("LikeSave", "Like", new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "savingresult_" + item.GetHashCode(),
                    LoadingElementId = "loader"
                }))
                {
                    <input type="hidden" id="PhotoId" name="PhotoId" value="@item.Id" />
                    <input type="hidden" id="UserId" name="UserId" value="@User.Identity.GetUserId()" />
                    <button class="btn-transparent">

                        <div id="savingresult_@item.GetHashCode()">
                            @*@if (@ViewBag.liked)
            {*@
                            @Html.Action("LikeCount", "Like", new LikeBLL() { PhotoId = item.Id, UserId = User.Identity.GetUserId() })
                            @*}
            else
            {
                <span style="font-size: 30px" class="glyphicon glyphicon-heart"></span>
            }*@
                        </div>
                    </button>
                }
                    
                    
                    
                    
                    
                    
                    
    @*</span>*@@*&nbsp; @Html.Action("LikeCount","Like",
    new LikeBLL() { PhotoId = item.Id, UserId = item.UserId})*@ &nbsp; <span class="glyphicon glyphicon-comment"></span> &nbsp; 20
                </div>
            </a>
            @*@Html.ActionLink("Likes", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Comments", "Comments", "Comment", new { id = item.Id }, null) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id, photoAddress = item.PhotoAddress }) |
            @Html.ActionLink("OnAvatar", "OnAvatar", new { id = item.Id })*@
        </div>
    }
</div><br />
<br />

<div class="row text-center">

    <div> @Html.PageLinks(Model.PagingInfo, x => Url.Action("Photos", new { page = x })) </div>
    <br/><br />

    <p class="btn btn-lg btn-default" style="width: 300px; margin:auto; padding: 20px">
        @Html.ActionLink("Add new photo", "Create")
    </p>
    <br /><br />
</div>
